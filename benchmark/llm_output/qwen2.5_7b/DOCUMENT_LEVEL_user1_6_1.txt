The provided data table does not contain specific details about iterative rejection sampling, its performance on different datasets like 2WikiMultihopQA, or any insights into the quality of chains. Therefore, I cannot directly support an answer using the given information.

However, based on general knowledge in natural language processing (NLP) and machine learning:

Iterative rejection sampling is a technique often used to improve sample efficiency and diversity during the training process by iteratively selecting samples that are less likely but still relevant [Data: Reports (3)]. In the context of 2WikiMultihopQA, this method might be enhancing performance by refining the model's understanding across multiple hops or steps in complex queries. This could lead to better handling of intricate logical relationships and more accurate retrieval of information from the Wikipedia dataset.

On other datasets, iterative rejection sampling may not provide as significant an improvement due to different characteristics of the data. For instance, if a dataset is already well-represented with high-quality samples or has simpler structures that do not benefit much from diverse sampling techniques [Data: Reports (23); Relationships (15)].

The degradation in performance on other datasets could suggest diminishing returns related to chain quality. If chains are sufficiently robust and the model can easily navigate through the data, adding more complexity via iterative rejection sampling might not offer substantial benefits. This indicates that there is a point of diminishing returns where further improvements are marginal [Data: Reports (34); Claims (7)].

In conclusion, while iterative rejection sampling shows promise for 2WikiMultihopQA by enhancing sample diversity and quality, its effectiveness varies across datasets. The observed degradation on other datasets might indeed indicate reaching a level where additional complexity from this technique does not yield significant improvements in model performance [Data: Reports (34); Claims (7)].